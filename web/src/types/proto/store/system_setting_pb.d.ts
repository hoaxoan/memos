// @generated by protoc-gen-es v1.3.0
// @generated from file store/system_setting.proto (package memos.store, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from enum memos.store.SystemSettingKey
 */
export declare enum SystemSettingKey {
  /**
   * @generated from enum value: SYSTEM_SETTING_KEY_UNSPECIFIED = 0;
   */
  SYSTEM_SETTING_KEY_UNSPECIFIED = 0,

  /**
   * BackupConfig is the key for auto-backup configuration.
   *
   * @generated from enum value: BACKUP_CONFIG = 1;
   */
  BACKUP_CONFIG = 1,
}

/**
 * @generated from message memos.store.BackupConfig
 */
export declare class BackupConfig extends Message<BackupConfig> {
  /**
   * enabled indicates whether backup is enabled.
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;

  /**
   * cron is the cron expression for backup. See https://godoc.org/github.com/robfig/cron#hdr-CRON_Expression_Format
   *
   * @generated from field: string cron = 2;
   */
  cron: string;

  /**
   * max_keep is the maximum number of backups to keep.
   *
   * @generated from field: int32 max_keep = 3;
   */
  maxKeep: number;

  constructor(data?: PartialMessage<BackupConfig>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "memos.store.BackupConfig";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BackupConfig;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BackupConfig;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BackupConfig;

  static equals(a: BackupConfig | PlainMessage<BackupConfig> | undefined, b: BackupConfig | PlainMessage<BackupConfig> | undefined): boolean;
}

